<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.eti.clairton</groupId>
	<artifactId>agenda</artifactId>
	<version>0.4.0</version>
	<packaging>war</packaging>

	<prerequisites>
		<maven>3.2.0</maven>
	</prerequisites>

	<properties>

		<agenda.datasource.class>org.hsqldb.jdbc.JDBCDataSource</agenda.datasource.class>
    <agenda.datasource.url>jdbc:hsqldb:mem:agenda</agenda.datasource.url>
    <agenda.datasource.user>sa</agenda.datasource.user>
    <agenda.datasource.password></agenda.datasource.password>
    <agenda.datasource.pool.max>10</agenda.datasource.pool.max>
    <agenda.datasource.pool.initial>2</agenda.datasource.pool.initial>
    <agenda.datasource.pool.min>5</agenda.datasource.pool.min>
    <agenda.datasource.isolation.level>TRANSACTION_READ_COMMITTED</agenda.datasource.isolation.level>
    <agenda.datasource.max.idle.time>300</agenda.datasource.max.idle.time>

		<weld.version>2.2.8.Final</weld.version>
		<jetty.version>9.2.3.v20140905</jetty.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<log.level>DEBUG</log.level>
		<hsqldb.version>2.3.3</hsqldb.version>
		<hibernate.version>5.0.7.Final</hibernate.version>
		<hibernate.validator.version>5.2.3.Final</hibernate.validator.version>
		<hibernate.jpa.version>1.0.0.Final</hibernate.jpa.version>
		<dbunit.version>2.5.0</dbunit.version>
		<deltaspike.version>1.5.4</deltaspike.version>
		<environment>develoment</environment>
		<npm.install.skip>false</npm.install.skip>
		<bower.install.skip>false</bower.install.skip>
		<ember.build.skip>false</ember.build.skip>
		<name.suffix />
		<skipAcceptanceTests>${skipTests}</skipAcceptanceTests>
	</properties>
	<dependencies>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>vraptor-cors</artifactId>
			<version>0.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>jcache-policy</artifactId>
			<version>0.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
		    <groupId>javax.cache</groupId>
		    <artifactId>cache-api</artifactId>
		    <version>1.0.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.17</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
		    <groupId>br.eti.clairton</groupId>
		    <artifactId>jpa-serializer</artifactId>
		    <version>1.2.3</version>
		    <scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>iterable-by-priority</artifactId>
			<version>0.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>unique-validator</artifactId>
			<version>1.0.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.vidageek</groupId>
			<artifactId>mirror</artifactId>
			<version>1.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>identificator</artifactId>
			<version>1.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>inflector</artifactId>
			<version>1.2.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>tenant</artifactId>
			<version>1.2.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>repository-http</artifactId>
			<version>1.2.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>paginated-collection</artifactId>
			<version>0.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>repository</artifactId>
			<version>2.9.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>repository-tenant</artifactId>
			<version>1.0.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.com.caelum</groupId>
			<artifactId>vraptor</artifactId>
			<version>4.1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>2.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- DeltaSpike -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
			<version>2.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!--HIBERNATE LOGGER (log4j) -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.18</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>migrator</artifactId>
			<version>1.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>hibernate-validator-utf8</artifactId>
			<version>0.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-digester3</artifactId>
			<version>3.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>gson-hypermedia</artifactId>
			<version>1.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-cdi</artifactId>
			<version>${hibernate.validator.version}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>hibernate-validator</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>${hibernate.jpa.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>br.com.caelum.vraptor</groupId>
			<artifactId>vraptor-test</artifactId>
			<version>4.1.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-junit</artifactId>
			<version>2.0.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>junit</artifactId>
			<groupId>junit</groupId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>br.eti.clairton</groupId>
			<artifactId>ds-test</artifactId>
			<version>0.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
			<version>1.2.2.Final</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		 <finalName>ROOT</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>./</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
				<targetPath>./</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.heroku.sdk</groupId>
				<artifactId>heroku-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<appName>agend4</appName>
					<jdkVersion>1.8</jdkVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.0.2.Final</version>
				<executions>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
						<parameters />
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<argLine>
						-Xmx512m
						-Xms128m
						-XX:MetaspaceSize=256m
						-XX:MaxMetaspaceSize=512m
						-Dnpm.install.skip=true
						-Dbower.install.skip=true
						-Dember.build.skip=true
					</argLine>
					<systemPropertyVariables>
						<jboss.server.log.dir>target/logs</jboss.server.log.dir>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<!-- Tira as versões dos arquivos -->
					<outputFileNameMapping>@{artifactId}@.@{extension}@</outputFileNameMapping>
					<webResources>
						<!-- Arquivos configuração subtituindo as variaveis -->
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.4.18</version>
				<configuration>
					<wait>true</wait>
					<container>
						<containerId>wildfly10x</containerId>
						<artifactInstaller>
							<groupId>org.wildfly</groupId>
							<artifactId>wildfly-dist</artifactId>
							<version>10.1.0.Final</version>
						</artifactInstaller>
						<dependencies>
							<dependency>
								<groupId>org.hsqldb</groupId>
								<artifactId>hsqldb</artifactId>
							</dependency>
						</dependencies>
					</container>
					<configuration>
						<properties>
							<cargo.datasource.datasource.exemplo>
								cargo.datasource.driver=org.hsqldb.jdbc.JDBCDriver|
								cargo.datasource.url=jdbc:hsqldb:mem:agenda;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE|
								cargo.datasource.jndi=java:/jdbc/datasources/AgendaDS|
								cargo.datasource.username=sa|
								cargo.datasource.password=
							</cargo.datasource.datasource.exemplo>
							<cargo.jvmargs>
								-Xmx1024m
								-Xms256m
								-XX:MetaspaceSize=256m
								-XX:MaxMetaspaceSize=512m
								-Dbr.com.caelum.vraptor.environment=development
								-Dbr.eti.clairton.migrator.populate=true
								-Dbr.eti.clairton.migrator.drop=true
							</cargo.jvmargs>
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<properties>
								<context>/${project.build.finalName}</context>
							</properties>
						</deployable>
					</deployables>
				</configuration>
				<executions>
					<execution>
						<id>run</id>
						<configuration>
							<configuration>
								<properties>
									<cargo.jvmargs>
										-Xdebug
										-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
										-Xnoagent
										-Djava.compiler=NONE
									</cargo.jvmargs>
								</properties>
							</configuration>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>start-server</id>
						<phase>pre-integration-test</phase>
						<configuration>
							<skip>${skipAcceptanceTests}</skip>
						</configuration>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-server</id>
						<phase>post-integration-test</phase>
						<configuration>
							<skip>${skipAcceptanceTests}</skip>
						</configuration>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>dist</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>tmp</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
				<executions>
					<execution>
						<id>cleanup</id>
						<phase>package</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>target/database</directory>
									<includes>
										<include>*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<executions>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.3.2,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.17,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<extensions>
			<extension>
				<groupId>ar.com.synergian</groupId>
				<artifactId>wagon-git</artifactId>
				<version>0.2.5</version>
			</extension>
		</extensions>
	</build>
	<pluginRepositories>
		<pluginRepository>
			<id>synergian-repo</id>
			<url>https://raw.github.com/synergian/wagon-git/releases</url>
		</pluginRepository>
	</pluginRepositories>
	<distributionManagement>
		<repository>
			<id>mvn-repo-releases</id>
			<name>Release Repo</name>
			<url>git:releases://git@github.com:clairton/mvn-repo.git</url>
		</repository>
		<snapshotRepository>
			<id>mvn-repo-snapshots</id>
			<name>Snapshot Repo</name>
			<url>git:snapshots://git@github.com:clairton/mvn-repo.git</url>
		</snapshotRepository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>mvn-repo-releases</id>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://raw.github.com/clairton/mvn-repo/releases</url>
		</repository>
		<repository>
			<id>mvn-repo-snapshots</id>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://raw.github.com/clairton/mvn-repo/snapshots</url>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>production</id>
			<properties>
				<environment>production</environment>
				<log.level>INFO</log.level>
				<log.path>../standalone/log</log.path>
			</properties>
		</profile>
	    <profile>
	     <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
	     <!-- Use this profile for any OpenShift specific customization your app will need. -->
	     <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
	     <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
	     <id>openshift</id>
	     <build>
	        <finalName>agenda</finalName>
	        <plugins>
	          <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
	              <configuration>
									<!-- Tira as versões dos arquivos -->
									<outputFileNameMapping>@{artifactId}@.@{extension}@</outputFileNameMapping>
	                <failOnMissingWebXml>false</failOnMissingWebXml>
	                <outputDirectory>deployments</outputDirectory>
	              	<warName>ROOT</warName>
									<webResources>
										<!-- Arquivos configuração subtituindo as variaveis -->
										<resource>
											<directory>${basedir}/src/main/webapp/WEB-INF</directory>
											<filtering>true</filtering>
											<targetPath>WEB-INF</targetPath>
										</resource>
									</webResources>
	              </configuration>
	            </plugin>
	        </plugins>
	      </build>
	    </profile>
	    <profile>
	    	<id>ember</id>
	    	<build>
	    		<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.3.2</version>
						<executions>
							<execution>
								<!-- Executa o npm install da app client ao rodar mvn install -->
								<id>npm-install</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
									<skip>${npm.install.skip}</skip>
								</configuration>
							</execution>
							<execution>
								<!-- Executa o bower install da app client ao rodar mvn install -->
								<id>bower-install</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bower</executable>
									<arguments>
										<argument>install</argument>
										<argument>--allow-root</argument>
									</arguments>
									<skip>${bower.install.skip}</skip>
								</configuration>
							</execution>
							<execution>
								<!-- Executa o ember build da app client ao rodar mvn install -->
								<!-- Posteriomente ele copia o dist da app client para o .war -->
								<id>ember-build</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<skip>${ember.build.skip}</skip>
									<executable>ember</executable>
									<arguments>
										<argument>build</argument>
										<argument>--environment=${environment}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<!-- Testa a app client ao rodar mvn integration-test -->
								<id>ember-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<skip>${skipAcceptanceTests}</skip>
									<executable>ember</executable>
									<arguments>
										<argument>test</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<!-- Adiciona arquivo gerados pelo ember -->
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
									<resources>
										<resource>
											<directory>dist</directory>
											<excludes>
												<exclude>tests/*</exclude>
												<exclude>crossdomain.xml</exclude>
												<exclude>robots.txt</exclude>
												<exclude>failed.png</exclude>
												<exclude>.gitkeep</exclude>
												<exclude>passed.png</exclude>
												<exclude>test-loader.js</exclude>
												<exclude>test-support.css</exclude>
												<exclude>test-support.js</exclude>
												<exclude>assets/test-loader.js</exclude>
												<exclude>assets/test-support.css</exclude>
												<exclude>assets/test-support.js</exclude>
												<exclude>testem.js</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-eclipse-plugin</artifactId>
						<version>2.10</version>
						<configuration>
							<sourceExcludes>
								<sourceExclude>**/dist/**</sourceExclude>
								<sourceExclude>**/tmp/**</sourceExclude>
								<sourceExclude>**/app/**</sourceExclude>
								<sourceExclude>dist/**</sourceExclude>
								<sourceExclude>tmp/**</sourceExclude>
								<sourceExclude>app/**</sourceExclude>
							</sourceExcludes>
							<!--<sourceIncludes><sourceInclude>**/*.myExtension</sourceInclude></sourceIncludes> -->
						</configuration>
					</plugin>
	    		</plugins>
	    	</build>
	    </profile>
	</profiles>
</project>
